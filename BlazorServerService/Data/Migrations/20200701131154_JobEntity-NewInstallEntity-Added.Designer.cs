// <auto-generated />
using System;
using BlazorServerService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorServerService.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200701131154_JobEntity-NewInstallEntity-Added")]
    partial class JobEntityNewInstallEntityAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlazorServerLibrary.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TownCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FixingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSupplied")
                        .HasColumnType("bit");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OpeningSizeHeight")
                        .HasColumnType("float");

                    b.Property<double>("OpeningSizeWidth")
                        .HasColumnType("float");

                    b.Property<int>("Sector")
                        .HasColumnType("int");

                    b.Property<string>("SupplierOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Door");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Door");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.ElectricOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Control")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElectricalSafety")
                        .HasColumnType("int");

                    b.Property<string>("MotorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PECQty")
                        .HasColumnType("int");

                    b.Property<int>("SupplyType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ElectricOperation");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.HistoryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Entry")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("HistoryStatus");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoorId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DoorId");

                    b.ToTable("Job");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Job");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.RollerShutter", b =>
                {
                    b.HasBaseType("BlazorServerLibrary.Models.Door");

                    b.Property<string>("AngleCutSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AngleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AntiFallSafety")
                        .HasColumnType("int");

                    b.Property<bool>("Canopy")
                        .HasColumnType("bit");

                    b.Property<string>("CanopyCutSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanopyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurtainType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElectricOperationId")
                        .HasColumnType("int");

                    b.Property<bool>("Fascia")
                        .HasColumnType("bit");

                    b.Property<string>("FasciaSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FasciaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FireDefence")
                        .HasColumnType("int");

                    b.Property<string>("GuideCutSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuideType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBoltOnGuides")
                        .HasColumnType("bit");

                    b.Property<double>("LathCutSize")
                        .HasColumnType("float");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<string>("RollerCutSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TubeTypeGauge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WicketEuroDoor")
                        .HasColumnType("bit");

                    b.HasIndex("ElectricOperationId");

                    b.HasDiscriminator().HasValue("RollerShutter");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Sectional", b =>
                {
                    b.HasBaseType("BlazorServerLibrary.Models.Door");

                    b.HasDiscriminator().HasValue("Sectional");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.NewInstall", b =>
                {
                    b.HasBaseType("BlazorServerLibrary.Models.Job");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.HasDiscriminator().HasValue("NewInstall");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Repair", b =>
                {
                    b.HasBaseType("BlazorServerLibrary.Models.Job");

                    b.HasDiscriminator().HasValue("Repair");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Servicing", b =>
                {
                    b.HasBaseType("BlazorServerLibrary.Models.Job");

                    b.HasDiscriminator().HasValue("Servicing");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Address", b =>
                {
                    b.HasOne("BlazorServerLibrary.Models.Customer", null)
                        .WithMany("Address")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.HistoryStatus", b =>
                {
                    b.HasOne("BlazorServerLibrary.Models.Job", null)
                        .WithMany("History")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Invoice", b =>
                {
                    b.HasOne("BlazorServerLibrary.Models.Job", null)
                        .WithMany("Invoices")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.Job", b =>
                {
                    b.HasOne("BlazorServerLibrary.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("BlazorServerLibrary.Models.Door", "Door")
                        .WithMany()
                        .HasForeignKey("DoorId");
                });

            modelBuilder.Entity("BlazorServerLibrary.Models.RollerShutter", b =>
                {
                    b.HasOne("BlazorServerLibrary.Models.ElectricOperation", "ElectricOperation")
                        .WithMany()
                        .HasForeignKey("ElectricOperationId");
                });
#pragma warning restore 612, 618
        }
    }
}
